<HTTP 상태코드 소개>
* 100번대 : 요청 수신되어 처리중 (안쓰인다. 알고만 있자)
* 미래에 새로운 상태코드가 정의되어도, 백단위의 구분을 맞출거니까
ㄴ "상위 상태코드로 해석해서 처리" : 기존 구버전 클라이언트들의 행동에도 적절히 반영되게끔
* 개발 시 어떤코드들을 사용할지 범위를 지정해놓는 협의를 한다


<2xx - 성공> : 보통 200만, 잘써봐야 201
200 OK
201 Created : 요청으로 인해 새로운 리소스가 생성됨
202 Accepted : 요청은 정상접수됐지만, 처리가 완료되지 않음  ex> 요청으로 batch가 시작예정or진행중
204 No Content : 요청은 수행했고, 응답 본문에 보낼 내용이 없음  ex> 웹 문서편집기 save버튼


<3xx - 리다이렉션>
* 요청을 완료하기 위해 유저 에이전트(보통 웹브라우저)의 추가 조치가 필요

* 웹브라우저는 3xx 응답에 Location 헤더가 들어있으면, 그 Location이 가리키는 위치로 자동 이동
ㄴ> !!!리다이렉트 [그림 6a : 기존에 알려진 경로가 만료되고, 서버측에서 새로운 경로를 제공하고 싶을때]

* 위 예시는 "영구 리다이렉션"
- 일시 리다이렉션 : PRG 패턴을 주로 사용하게 된다 (?)  ex> 주문 완료 후 주문 내역 화면으로 이동시키기
- 특수 리다이렉션 : 클라이언트에서 들고있는 캐시가 유효한지 서버에 문의해서 확인받는다 → 결과 대신 캐시를 사용 (?)

* 영구 리다이렉션 : 검색엔진이 변경된 url로 업데이트 할거다 (잘 사용안함, 그나마 301)
301 Moved Permanently : 리다이렉트 요청 메서드가 GET으로 변해서, 본문이 제거(될수있음)
308 Permanent Redirect : 리다이렉트 요청 메서드가 원본과 동일
- 새 경로에 기존 메시지바디가 무의미할때 301, GET으로 변하니까 새 경로와 처음부터 다시 통신
- 기존 메시지바디를 새 경로에 그대로 전달해도 동작할때 308
- 아무래도 301이 안전 (기존 경로 기반으로 새 경로 서비스를 구현했어도, 어떻게 별개로 또 수정될지 모르니까)

* 일시 리다이렉션 : 검색엔진이 기존경로를 가지고 있어야 한다
302 Found : 리다이렉트 요청 메서드가 GET으로 변해서, 본문이 제거(될수있음)
307 Temporary Redirect : 리다이렉트 요청 메서드가 원본과 동일
303 See Other : 리다이렉트 요청 메서드를 명확히 GET으로 바꿈 (본문을 꼭 제거?)
- 302의 처음 설계 의도는 307처럼 메서드유지 였는데, 웹브라우저들이 대부분 GET으로 바꿔버림
ㄴ 그래서 307, 303을 새로 정의하여 동작구분을 명확히하려했다 (303을 권장하지만 302가 현실적으로 많이 쓰임)

* PRG : Post-Redirect-Get
- POST로 주문하고 브라우저를 새로고침하면 다시요청해서 중복주문???
- POST에 실어서 서버로 보낸 주문에 대한 응답으로
ㄴ 서버가 [302+주문완료경로]를 보내면 (Redirect)
ㄴ 유저가 새로고침(Get)해도 새 경로로
ㄴ 일련의 과정들이 Post-Redirect-Get [그림 6b]

* 기타 리다이렉션
304 Not Modified : 진짜 많이쓴다. 나중에 캐시 다루는 부분에서 상세히 다룰것임
ㄴ 로컬pc가 캐시를 재사용하게끔한다 (캐시로 리다이랙트) → 그래서 메시지바디가 없음


<4xx - 클라이언트 오류 / 5xx - 서버 오류>
* 4xx : 오류의 원인이 클라이언트. 똑같은 재시도를 보내면 실패함 (멱등하고 관련해서 설명되려나)
400 Bad Request : 파라미터가 잘못됐을때, api 스펙이 맞지않을때
401 Unauthorized : 인증필요. 응답 헤더에 [WWW-Authenticate]라고 인증방법을 설명해야함
ㄴ 메시지 직역하면 인가필요. (인증=로그인필요 <-> 인가=권한필요)
ㄴ 인가 말고 인증에 대한 메시지가 맞는데 잘못 명명됨
403 Forbidden : 서버가 요청은 알겠는데 승인을 거부한다. (이게 인가가 필요한거겠지)
404 Not Found : 리소스가 서버에 [없음or권한에따른숨김상태]

* 5xx : 오류의 원인이 서버. 똑같은 재시도를 보내면 성공할수도 있음
500 Internal Server Error : 서버 내부 문제. 후술할거로 구분 못하는 애매한 문제들
503 Service Unavailable : 서비스가 과부하or예정작업 으로 잠시 요청을 처리할수 없음 (요즘은 워낙 다 빨라서 잘 안보임)
- 현업 실무에서 자주보이는 실수 : ex> 19세 이상 제공서비스인데 15세가 접근시도
ㄴ 서버가 내줄수없는 이슈가 아니라 정상프로세스로, 비즈니스 로직 내에서 해결해야할