<클라이언트에서 서버로 데이터 전송>
* 두가지로 나뉜다
- 쿼리 파라미터를 통한 데이터 전송 (GET) : 주로 정렬 필터(검색어)
- 메시지 바디를 통한 데이터 전송 (POST, PUT, PATCH) : 회원가입, 상품주문, 리소스등록-변경 등

* 네가지 상황예시를 볼거다
- 정적 데이터 조회
- 동적 데이터 조회
- HTML Form을 통한 데이터 전송
- HTTP API를 통한 데이터 전송

* 정적 데이터 조회 : 쿼리파라미터 필요없이, 경로만으로 조회 가능

* 동적 데이터 조회

* HTML Form을 통한 데이터 전송 : GET, POST만 가능

* api : html을 쓰지않는 거의 모든 상황
- Content-Type : application/json이 현재 사실상 표준 (text, xml, json 등 사용)
- 서버간 통신 (백엔드 시스템 통신), 앱 클라이언트 (안드로이드, ios), 웹 클라이언트



<HTTP API 설계 예시>
* 파일 관리 시스템 - 신규자원을 등록할때
- POST : 서버가 리소스의 uri를 생성 지정 관리 = 컬렉션
- PUT : 클라이언트가 직접 리소스의 uri를 지정 = 스토어
ㄴ 대부분 컬렉션을 활용

* HTML Form 사용 (← HTTP 메서드로 해결하기 애매한 경우)
- api 없 이 순수 html + 폼만 사용할때 : form이 GET, POST만 지원하므로 제약이 있음
- 제약을 해결하기위해 Form을 리소스(명사)-행위(동사) 중에 리소스로 구분해서 GET : 컨트롤 uri가 쓰이는 대표 예시
ㄴ 폼 조회까지는 (동작이지만) 서버에 변화를 주지 않기 때문 [그림 5a]

* 마지막 한짤 정리 [그림 5b]